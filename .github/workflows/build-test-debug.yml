name: Build & Test Debug Linux # ADT-Tweak

on:
  push:
    branches: [ master, staging, stable ]
  merge_group:
  pull_request:
    types: [ opened, reopened, synchronize, ready_for_review ]
    branches: [ master, staging, stable ]
  workflow_dispatch: # ручной запуск ADT Tweak

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: false

jobs:
  build:
    if: github.actor != 'IanComradeBot' && github.event.pull_request.draft == false
    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout Master
      uses: actions/checkout@v4.2.2

    - name: Setup Submodule
      run: |
        git submodule update --init --recursive

    - name: Pull engine updates
      uses: space-wizards/submodule-dependency@v0.1.5

    - name: Update Engine Submodules
      run: |
        cd RobustToolbox/
        git submodule update --init --recursive

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4.1.0
      with:
        dotnet-version: 9.0.x

    - name: Install dependencies
      run: dotnet restore

    - name: Build Project
      run: dotnet build --configuration Release --no-restore /p:WarningsAsErrors=nullable /m

    - name: Run Content.Tests
      run: dotnet test --no-build --configuration Release Content.Tests/Content.Tests.csproj -- NUnit.ConsoleOut=0

    - name: Run Content.IntegrationTests
      shell: pwsh
      continue-on-error: true
      env:
        DOTNET_gcServer: "1"
      run: |
        $output = dotnet test --no-build --configuration Release Content.IntegrationTests/Content.IntegrationTests.csproj -- NUnit.ConsoleOut=0 2>&1

        Write-Host $output

        $errorLines = ($output -split "`n") | Where-Object {
          ($_ -match '(?i)\bERROR\b') -and
          ($_ -notmatch 'The operation was canceled') -and
          ($_ -notmatch 'System\.OperationCanceledException')
        }

        if ($errorLines.Count -gt 0) {
          Write-Host "❌ Found unexpected ERROR(s) in the output:"
          $errorLines | ForEach-Object { Write-Host $_ }
          exit 1
        }

        if ($LASTEXITCODE -ne 0) {
          if ($output -match 'The operation was canceled' -or $output -match 'System\.OperationCanceledException') {
            Write-Host "⚠️ Test runner canceled, but no critical errors. Marking as success."
            exit 0
          }
          else {
            Write-Host "❌ dotnet test failed with exit code $LASTEXITCODE and no cancellation marker."
            exit $LASTEXITCODE
          }
        }

        Write-Host "✅ Test completed without critical ERRORs."
        exit 0

  ci-success:
    name: Build & Test Debug
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: CI succeeded
        run: exit 0